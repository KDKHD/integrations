{
  "attributes": {
    "raw": {
      "document": "---\ntitle: \"BLISTER Configuration Extractor\"\nslug: \"blister-configuration-extractor\"\ndate: \"2022-12-06\"\ndescription: \"Python script to extract the configuration and payload from BLISTER samples.\"\nauthor:\n  - slug: elastic-security-labs\nimage: \"tools-image.jpg\"\ncategory:\n  - slug: tools\ntags:\n  - blister\n  - ref7890\n---\n\nPython script to extract the configuration and payload from BLISTER samples.\n\n[Download blister-config-extractor.tar.gz](https://assets.contentstack.io/v3/assets/bltefdd0b53724fa2ce/blt9bce8a0e1a513bd5/62882db13b9b8554904a4baa/blister-config-extractor.tar.gz)\n\n## Getting Started\n\nThis tool provides a Python module and command line tool that will extract configurations from the BLISTER malware loader and dump the results to screen.\n\n> For information on the BLISTER malware loader and campaign observations, check out our blog posts detailing this:\n>\n> - [BLISTER Campaign Analysis](https://www.elastic.co/security-labs/elastic-security-uncovers-blister-malware-campaign)\n> - [BLISTER Malware Analysis](https://www.elastic.co/security-labs/blister-loader)\n\n### Docker\n\nWe can easily run the extractor with Docker, first we need to build the image:\n\n```\ndocker build . -t blister-config-extractor\n```\n\nThen we run the container with the **-v** flag to map a host directory to the docker container directory:\n\n```\ndocker run -ti --rm -v \\\n\"$(pwd)/binaries\":/binaries blister-config-extractor:latest -d /binaries/\n\n```\n\nWe can either specify a single sample with **-f** option or a directory of samples with **-d**.\n\n![BLISTER configuration extrator output](/assets/images/blister-configuration-extractor/blister-configuration-extractor-image41.jpg)\n\n### Running it Locally\n\nAs mentioned above, Docker is the recommended approach to running this project, however you can also run this locally. This project uses [Poetry](https://python-poetry.org/) to manage dependencies, testing, and metadata. If you have Poetry installed already, from this directory, you can simply run the following commands to run the tool. This will setup a virtual environment, install the dependencies, activate the virtual environment, and run the console script.\n\n```\npoetry lock\npoetry install\npoetry shell\nblister-config-extractor -h\n\n```\n\nOnce that works, you can do the same sort of things as mentioned in the Docker instructions above.\n\n## References\n\n- Customised Rabbit cipher implementation based on [Rabbit-Cipher](https://github.com/Robin-Pwner/Rabbit-Cipher/)\n"
    },
    "title": "BLISTER Configuration Extractor",
    "slug": "blister-configuration-extractor",
    "date": "2022-12-06",
    "description": "Python script to extract the configuration and payload from BLISTER samples.",
    "author": [
      {
        "slug": "elastic-security-labs"
      }
    ],
    "image": "tools-image.jpg",
    "category": [
      {
        "slug": "tools"
      }
    ],
    "tags": [
      "blister",
      "ref7890"
    ]
  },
  "id": "security_labs_content-blister_configuration_extractor-md",
  "type": "security_labs_content"
}
