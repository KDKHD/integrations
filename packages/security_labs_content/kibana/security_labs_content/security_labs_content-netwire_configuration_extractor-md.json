{
  "attributes": {
    "raw": {
      "document": "---\ntitle: \"NETWIRE Configuration Extractor\"\nslug: \"netwire-configuration-extractor\"\ndate: \"2023-01-27\"\nsubtitle: \"Configuration extraction tool for the NETWIRE malware.\"\ndescription: \"Python script to extract the configuration from NETWIRE samples.\"\nauthor:\n  - slug: elastic-security-labs\nimage: \"tools-image.jpg\"\ncategory:\n  - slug: tools\ntags:\n  - netwire\n  - ref9965\n---\n\nPython script to extract the payload from NETWIRE samples.\n\n[Download netwire-configuration-extractor.tar.gz](https://assets.contentstack.io/v3/assets/bltefdd0b53724fa2ce/bltdcef1d05d2077d05/63d43627c31a7126813ff8b6/netwire-configuration-extractor.tar.gz)\n\n> For information on the NETWIRE malware check out the following resources:\n>\n> - [NETWIRE Dynamic Configuration Extraction](https://www.elastic.co/security-labs/netwire-dynamic-configuration-extraction)\n\n## Getting started\n\n### Docker\n\nThe recommended and easiest way to get going is to use Docker. From the directory this README is in, you can build a local container.\n\n```\ndocker build . -t netwire_loader_config_extractor\n```\n\nThen we run the container with the **-v** flag to map a host directory to the docker container directory.\n\n```\ndocker run -ti --rm -v $(pwd)/data:/data netwire_loader_config_extractor:latest --help\n```\n\n### Running it locally\n\nAs mentioned above, Docker is the recommended approach to running this project, however you can also run this locally. This project uses [Poetry](https://python-poetry.org/) to manage dependencies, testing, and metadata. If you have Poetry installed already, from this directory, you can simply run the following commands to run the tool. This will setup a virtual environment, install the dependencies, activate the virtual environment, and run the console script.\n\n```\npoetry lock\npoetry install\npoetry shell\nnetwire-config-extractor --help\n```\n\n## Usage\n\nAll samples need to be unpacked prior to execution extraction attempts.\n\nOur extractor takes either a directory of samples with **-d** option or **-f** for a single sample and then can output parts of the configuration of note, specifically:\n\n- **-k** : extract the encryption keys\n- **-c** : extract the C2 information\n- **-s** : extract the wide-character strings\n- **-a** : extract the ASCII character strings\n\n```\ndocker run -ti --rm -v $(pwd)/data:/data netwire_loader_config_extractor:latest -d \"C:\\tmp\\samples\"\n```\n\n![NETWIRE configuration extractor](/assets/images/netwire-configuration-extractor/image6.jpg)\n\nYou can collect the extracted configurations from the directory you set when running the extractor.\n"
    },
    "title": "NETWIRE Configuration Extractor",
    "slug": "netwire-configuration-extractor",
    "subtitle": "Configuration extraction tool for the NETWIRE malware.",
    "date": "2023-01-27",
    "description": "Python script to extract the configuration from NETWIRE samples.",
    "author": [
      {
        "slug": "elastic-security-labs"
      }
    ],
    "image": "tools-image.jpg",
    "category": [
      {
        "slug": "tools"
      }
    ],
    "tags": [
      "netwire",
      "ref9965"
    ]
  },
  "id": "security_labs_content-netwire_configuration_extractor-md",
  "type": "security_labs_content"
}
