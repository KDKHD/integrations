{
  "attributes": {
    "raw": {
      "document": "---\ntitle: \"BPFDoor Configuration Extractor\"\nslug: \"bpfdoor-configuration-extractor\"\ndate: \"2022-12-06\"\ndescription: \"Configuration extractor to dump out hardcoded passwords with BPFDoor.\"\nauthor:\n  - slug: elastic-security-labs\nimage: \"tools-image.jpg\"\ncategory:\n  - slug: tools\ntags:\n  - bpfdoor\n---\n\nConfiguration extractor to dump out hardcoded passwords with BPFDoor.\n\n[Download bpfdoor-config-extractor.tar.gz](https://assets.contentstack.io/v3/assets/bltefdd0b53724fa2ce/blt3f57100ade3473c5/62882ccdb4fa6b61ed70ba87/bpfdoor-config-extractor.tar.gz)\n\n## Overview\n\nThis tool provides a Python module and command line tool that will extract passwords from BPFDoor samples.\n\n> The Elastic Security Team has released an indepth analysis of the BPFDoor malware and created an additional tool that will scan for BPFDoor infected hosts.\n>\n> - [BPFDoor analysis](https://bookish-bassoon-c37be003.pages.github.io/intelligence/2022/05/04.bpfdoor/article/)\n> - [BPFDoor scanner](https://www.elastic.co/security-labs/bpfdoor-scanner)\n\n## Getting Started\n\n### Docker\n\nWe can easily run the extractor with Docker, first we need to build the image.\n\n```\nBuilding the BPFDoor Docker image\n\ndocker build . -t bpfdoor-extractor\n```\n\nThen we run the container with the **-v** flag to map a host directory to the Docker container directory that contains the BPFDoor samples.\n\n```\nRunning the BPFDoor Docker container\n\ndocker run -ti --rm -v $(pwd)/binaries:/binaries \\\n  bpfdoor-extractor:latest -d /binaries/\n```\n\nWe can either specify a single sample with **-f** option or a directory of samples with **-d**\n\n```\nBPFDoor Configuration Extractor help output\n\ndocker run -ti --rm bpfdoor-extractor:latest -h\n\nAuthor: Elastic Security (MARE)\n\n______ ______ ______ ______\n| ___ \\| ___ \\|  ___||  _  \\\n| |_/ /| |_/ /| |_   | | | | ___    ___   _ __\n| ___ \\|  __/ |  _|  | | | |/ _ \\  / _ \\ | '__|\n| |_/ /| |    | |    | |/ /| (_) || (_) || |\n\\____/ \\_|    \\_|    |___/  \\___/  \\___/ |_|\n _____                 __  _          _____       _                      _\n/  __ \\               / _|(_)        |  ___|     | |                    | |\n| /  \\/  ___   _ __  | |_  _   __ _  | |__ __  __| |_  _ __  __ _   ___ | |_  ___   _ __\n| |     / _ \\ | '_ \\ |  _|| | / _` | |  __|\\ \\/ /| __|| '__|/ _` | / __|| __|/ _ \\ | '__|\n| \\__/\\| (_) || | | || |  | || (_| | | |___ >  < | |_ | |  | (_| || (__ | |_| (_) || |\n \\____/ \\___/ |_| |_||_|  |_| \\__, | \\____//_/\\_\\ \\__||_|   \\__,_| \\___| \\__|\\___/ |_|\n                               __/ |\n                              |___/\n\n\nusage: bpfdoor-extractor [-h] (-f FILENAME | -d DIRNAME)\n\noptions:\n  -h, --help            show this help message and exit\n  -f FILENAME, --file FILENAME\n                        File\n  -d DIRNAME, --dir DIRNAME\n                        Directory\n\n```\n\n### Running it Locally\n\nAs mentioned above, Docker is the recommended approach to running this project, however you can also run this locally. This project uses [Poetry](https://python-poetry.org/) to manage dependencies, testing, and metadata. If you have Poetry installed already, from this directory, you can simply run the following commands to run the tool. This will setup a virtual environment, install the dependencies, activate the virtual environment, and run the console script.\n\n```\npoetry lock\npoetry install\npoetry shell\nbpfdoor-extractor --help\n```\n\nOnce that works, you can do the same sort of things as mentioned in the Docker instructions above.\n"
    },
    "title": "BPFDoor Configuration Extractor",
    "slug": "bpfdoor-configuration-extractor",
    "date": "2022-12-06",
    "description": "Configuration extractor to dump out hardcoded passwords with BPFDoor.",
    "author": [
      {
        "slug": "elastic-security-labs"
      }
    ],
    "image": "tools-image.jpg",
    "category": [
      {
        "slug": "tools"
      }
    ],
    "tags": [
      "bpfdoor"
    ]
  },
  "id": "security_labs_content-bpfdoor_configuration_extractor-md",
  "type": "security_labs_content"
}
